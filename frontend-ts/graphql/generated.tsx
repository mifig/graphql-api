import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** An ISO 8601-encoded datetime */
  ISO8601DateTime: { input: any; output: any; }
};

export type Blog = {
  __typename?: 'Blog';
  createdAt: Scalars['ISO8601DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  reviews?: Maybe<Array<Review>>;
  title?: Maybe<Scalars['String']['output']>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
  user: User;
};

/** Autogenerated input type of BlogCreate */
export type BlogCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateBlogInput;
};

/** Autogenerated return type of BlogCreate. */
export type BlogCreatePayload = {
  __typename?: 'BlogCreatePayload';
  blog: Blog;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of BlogDelete */
export type BlogDeleteInput = {
  blogId: Scalars['ID']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
};

/** Autogenerated return type of BlogDelete. */
export type BlogDeletePayload = {
  __typename?: 'BlogDeletePayload';
  blog: Blog;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Autogenerated input type of BlogUpdate */
export type BlogUpdateInput = {
  blogId: Scalars['ID']['input'];
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: UpdateBlogInput;
};

/** Autogenerated return type of BlogUpdate. */
export type BlogUpdatePayload = {
  __typename?: 'BlogUpdatePayload';
  blog: Blog;
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
};

/** Attributes for creating a blog */
export type CreateBlogInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  title: Scalars['String']['input'];
};

/** Attributes for creating a registration (user). */
export type CreateRegistrationInput = {
  email: Scalars['String']['input'];
  firstName: Scalars['String']['input'];
  lastName: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

/** Attributes for creating a session. */
export type CreateSessionInput = {
  email: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type Mutation = {
  __typename?: 'Mutation';
  /** Creates a new blog */
  blogCreate?: Maybe<BlogCreatePayload>;
  /** Deletes a blog by ID */
  blogDelete?: Maybe<BlogDeletePayload>;
  /** Updates a blog by id */
  blogUpdate?: Maybe<BlogUpdatePayload>;
  /** Registers a new user */
  registrationCreate?: Maybe<RegistrationCreatePayload>;
  /** Deletes a user by ID */
  registrationDelete?: Maybe<RegistrationDeletePayload>;
  /** Updates a user by id */
  registrationUpdate?: Maybe<RegistrationUpdatePayload>;
  /** Creates a session for a user and returns a JWToken representing that session */
  sessionCreate?: Maybe<SessionCreatePayload>;
  /** Validates the JWToken and refreshes for a new one */
  sessionValidate?: Maybe<SessionValidatePayload>;
};


export type MutationBlogCreateArgs = {
  input: BlogCreateInput;
};


export type MutationBlogDeleteArgs = {
  input: BlogDeleteInput;
};


export type MutationBlogUpdateArgs = {
  input: BlogUpdateInput;
};


export type MutationRegistrationCreateArgs = {
  input: RegistrationCreateInput;
};


export type MutationRegistrationDeleteArgs = {
  input: RegistrationDeleteInput;
};


export type MutationRegistrationUpdateArgs = {
  input: RegistrationUpdateInput;
};


export type MutationSessionCreateArgs = {
  input: SessionCreateInput;
};


export type MutationSessionValidateArgs = {
  input: SessionValidateInput;
};

export type Query = {
  __typename?: 'Query';
  /** Get a blog by ID. */
  blog?: Maybe<Blog>;
  /** Get all blogs. */
  blogs: Array<Blog>;
  /** Get a review by ID. */
  review?: Maybe<Review>;
  /** Get a user by ID. */
  user?: Maybe<User>;
};


export type QueryBlogArgs = {
  blogId: Scalars['ID']['input'];
};


export type QueryReviewArgs = {
  id: Scalars['ID']['input'];
};


export type QueryUserArgs = {
  userId: Scalars['ID']['input'];
};

/** Autogenerated input type of RegistrationCreate */
export type RegistrationCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateRegistrationInput;
};

/** Autogenerated return type of RegistrationCreate. */
export type RegistrationCreatePayload = {
  __typename?: 'RegistrationCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

/** Autogenerated input type of RegistrationDelete */
export type RegistrationDeleteInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['ID']['input'];
};

/** Autogenerated return type of RegistrationDelete. */
export type RegistrationDeletePayload = {
  __typename?: 'RegistrationDeletePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

/** Autogenerated input type of RegistrationUpdate */
export type RegistrationUpdateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  currentPassword: Scalars['String']['input'];
  data: UpdateRegistrationInput;
  userId: Scalars['ID']['input'];
};

/** Autogenerated return type of RegistrationUpdate. */
export type RegistrationUpdatePayload = {
  __typename?: 'RegistrationUpdatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  user: User;
};

export type Review = {
  __typename?: 'Review';
  blog: Blog;
  content?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  id: Scalars['ID']['output'];
  updatedAt: Scalars['ISO8601DateTime']['output'];
  user: User;
};

/** Autogenerated input type of SessionCreate */
export type SessionCreateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  data: CreateSessionInput;
};

/** Autogenerated return type of SessionCreate. */
export type SessionCreatePayload = {
  __typename?: 'SessionCreatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  token: Scalars['String']['output'];
  user: User;
};

/** Autogenerated input type of SessionValidate */
export type SessionValidateInput = {
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: InputMaybe<Scalars['String']['input']>;
  token: Scalars['String']['input'];
};

/** Autogenerated return type of SessionValidate. */
export type SessionValidatePayload = {
  __typename?: 'SessionValidatePayload';
  /** A unique identifier for the client performing the mutation. */
  clientMutationId?: Maybe<Scalars['String']['output']>;
  token: Scalars['String']['output'];
  user: User;
};

/** Attributes for updating a blog */
export type UpdateBlogInput = {
  description?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['ID']['input']>;
};

/** Attributes for updating a registration (user). */
export type UpdateRegistrationInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  firstName?: InputMaybe<Scalars['String']['input']>;
  lastName?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
};

export type User = {
  __typename?: 'User';
  blogs?: Maybe<Array<Blog>>;
  createdAt: Scalars['ISO8601DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  lastName?: Maybe<Scalars['String']['output']>;
  reviews?: Maybe<Array<Review>>;
  updatedAt: Scalars['ISO8601DateTime']['output'];
};

export type AuthenticateMutationVariables = Exact<{
  token: Scalars['String']['input'];
}>;


export type AuthenticateMutation = { __typename?: 'Mutation', sessionValidate?: { __typename?: 'SessionValidatePayload', token: string, user: { __typename?: 'User', email?: string | null, fullName?: string | null, id: string } } | null };

export type LoginMutationVariables = Exact<{
  data: CreateSessionInput;
}>;


export type LoginMutation = { __typename?: 'Mutation', sessionCreate?: { __typename?: 'SessionCreatePayload', token: string, user: { __typename?: 'User', id: string, fullName?: string | null, email?: string | null } } | null };

export type BlogQueryVariables = Exact<{
  blogId: Scalars['ID']['input'];
}>;


export type BlogQuery = { __typename?: 'Query', blog?: { __typename?: 'Blog', title?: string | null, description?: string | null, createdAt: any, user: { __typename?: 'User', email?: string | null } } | null };

export type BlogsQueryVariables = Exact<{ [key: string]: never; }>;


export type BlogsQuery = { __typename?: 'Query', blogs: Array<{ __typename?: 'Blog', id: string, title?: string | null, description?: string | null, user: { __typename?: 'User', email?: string | null, fullName?: string | null } }> };


export const AuthenticateDoc = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Authenticate"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"token"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sessionValidate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"token"},"value":{"kind":"Variable","name":{"kind":"Name","value":"token"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"token"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]}}]} as unknown as DocumentNode<AuthenticateMutation, AuthenticateMutationVariables>;
export const LoginDoc = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"Login"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"data"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"CreateSessionInput"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sessionCreate"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"input"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"data"},"value":{"kind":"Variable","name":{"kind":"Name","value":"data"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}},{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"Field","name":{"kind":"Name","value":"token"}}]}}]}}]} as unknown as DocumentNode<LoginMutation, LoginMutationVariables>;
export const BlogDoc = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Blog"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"blogId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"ID"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"blog"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"blogId"},"value":{"kind":"Variable","name":{"kind":"Name","value":"blogId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"email"}}]}},{"kind":"Field","name":{"kind":"Name","value":"createdAt"}}]}}]}}]} as unknown as DocumentNode<BlogQuery, BlogQueryVariables>;
export const BlogsDoc = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Blogs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"blogs"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"user"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"email"}},{"kind":"Field","name":{"kind":"Name","value":"fullName"}}]}}]}}]}}]} as unknown as DocumentNode<BlogsQuery, BlogsQueryVariables>;